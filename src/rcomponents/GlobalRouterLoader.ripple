import { track, effect } from 'ripple';
import { useRouter } from '../userouter';
import "./style.css"

export  component GlobalLoader() {
  let globalLoading = track(false);
  let progress = track(0); // 0 to 100
  let intervalId: number | null = null;

  const router = useRouter();

  // Animate progress
  effect(() => {
    if (@globalLoading) {
      @progress = 0;
      if (intervalId) clearInterval(intervalId);
      intervalId = setInterval(() => {
        if (@progress < 90) {
          @progress += 2; // smooth progress
          console.log("loading")
        }
      }, 50);
      console.log("loading started");
    } else {
      if (intervalId) clearInterval(intervalId);
      @progress = 100; // complete instantly
      const timeout = setTimeout(() => @progress = 0, 300); // reset
    }
  });

  // Listen to router events
  effect(() => {
    const offStart = router.on("start", () => {
      @globalLoading = true;
    });
    const offComplete = router.on("complete", () => {
      @globalLoading = false;
    });

    return () => {
      offStart();
      offComplete();
    };
  });

 <div
  class="loader"
  style={`width: ${@progress}%; background: linear-gradient(270deg, #1e90ff, #ff1493, #00ff7f)`}
  
></div>

 

 
}


export default GlobalLoader